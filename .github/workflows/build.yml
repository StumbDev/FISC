name: Build CLI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            output-name: fisc_cli
            asset-name: fisc_cli_linux_x86_64.tar.gz
          - os: windows-latest
            output-name: fisc_cli.exe
            asset-name: fisc_cli_windows_x86_64.zip
          - os: macos-latest
            output-name: fisc_cli
            asset-name: fisc_cli_macos_universal.tar.gz

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Directory
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake ..

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config Release

    - name: Package (Unix)
      if: runner.os != 'Windows'
      working-directory: ${{github.workspace}}/build
      run: |
        mkdir -p package/bin
        cp bin/${{ matrix.output-name }} package/bin/
        cd package
        tar czf ../${{ matrix.asset-name }} .

    - name: Package (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{github.workspace}}/build
      run: |
        mkdir package
        copy Release\${{ matrix.output-name }} package\
        cd package
        7z a ..\${{ matrix.asset-name }} .

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: fisc_cli-${{ matrix.os }}
        path: ${{github.workspace}}/build/${{ matrix.asset-name }}

    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{github.workspace}}/build/${{ matrix.asset-name }}
        asset_name: ${{ matrix.asset-name }}
        asset_content_type: application/octet-stream 